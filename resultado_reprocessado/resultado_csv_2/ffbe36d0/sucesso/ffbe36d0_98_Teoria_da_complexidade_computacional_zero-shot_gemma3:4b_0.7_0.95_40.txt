```json
[
  {
    "pergunta": "Qual o principal foco da Teoria da Complexidade Computacional?",
    "resposta": "A análise da eficiência de algoritmos e a determinação dos limites do que pode ser computado."
  },
  {
    "pergunta": "O que é um problema NP-completo?",
    "resposta": "Um problema que, se uma solução eficiente fosse encontrada, poderia ser usada para resolver todos os problemas em NP em tempo polinomial."
  },
  {
    "pergunta": "O que significa a notação Big O?",
    "resposta": "Uma maneira de descrever o desempenho de um algoritmo em termos de crescimento da quantidade de recursos (tempo ou espaço) necessária com o aumento do tamanho da entrada."
  },
  {
    "pergunta": "Qual a relação entre NP e NP-Completo?",
    "resposta": "NP (Nondeterministic Polynomial Time) é a classe de problemas que podem ser resolvidos por um algoritmo em tempo polinomial. NP-Completo é um subconjunto de NP que contém problemas considerados 'difíceis'."
  },
  {
    "pergunta": "O que é a redução polinomial?",
    "resposta": "Um método para transformar um problema em outro, mostrando que a solução de um pode ser usada para resolver o outro em tempo polinomial."
  },
  {
    "pergunta": "Qual a importância do P versus NP?",
    "resposta": "Resolver se P = NP é um dos maiores problemas não resolvidos na ciência da computação, com implicações profundas para a segurança de criptografia e a otimização de algoritmos."
  },
  {
    "pergunta": "O que caracteriza um problema em classe P?",
    "resposta": "Um problema que pode ser resolvido por um algoritmo em tempo polinomial."
  },
  {
    "pergunta": "Qual o papel da computação limitada na Teoria da Complexidade Computacional?",
    "resposta": "Define os limites do que é computável, estabelecendo os problemas que podem ser resolvidos por qualquer máquina de Turing."
  },
  {
    "pergunta": "O que é uma máquina de Turing?",
    "resposta": "Um modelo teórico de computação que define os limites do que pode ser computado."
  },
  {
    "pergunta": "Como a Teoria da Complexidade Computacional contribui para a otimização de algoritmos?",
    "resposta": "Ao identificar problemas inherentemente difíceis e fornecer ferramentas para analisar a eficiência de algoritmos, permitindo a escolha de soluções mais adequadas."
  }
]
```