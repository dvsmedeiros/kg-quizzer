```json
[
  {
    "pergunta": "Qual o principal objetivo do estudo da complexidade computacional?",
    "resposta": "Classificar problemas computacionais de acordo com sua dificuldade intrínseca."
  },
  {
    "pergunta": "O que é um problema decidível na teoria da computação?",
    "resposta": "Um problema para o qual existe um algoritmo que sempre termina e retorna a resposta correta."
  },
  {
    "pergunta": "O que significa dizer que um problema é 'intratável'?",
    "resposta": "O problema não pode ser resolvido por um algoritmo em tempo polinomial."
  },
  {
    "pergunta": "Qual a classe de complexidade que contém problemas que podem ser resolvidos em tempo polinomial?",
    "resposta": "P"
  },
  {
    "pergunta": "O que são problemas NP-completos?",
    "resposta": "Problemas que são os mais difíceis na classe NP."
  },
  {
    "pergunta": "Qual a relação entre os problemas da classe P e NP?",
    "resposta": "P é um subconjunto de NP."
  },
  {
    "pergunta": "O que significa a questão 'P=NP'?",
    "resposta": "Se todo problema cuja solução pode ser verificada rapidamente também pode ser resolvido rapidamente."
  },
  {
    "pergunta": "Qual a importância de entender a complexidade de um problema antes de tentar resolvê-lo?",
    "resposta": "Permite escolher a melhor abordagem e evitar o desenvolvimento de algoritmos ineficientes."
  },
  {
    "pergunta": "O que é um algoritmo de força bruta?",
    "resposta": "Um algoritmo que tenta todas as soluções possíveis para um problema."
  },
  {
    "pergunta": "Qual a principal característica dos algoritmos eficientes em termos de complexidade?",
    "resposta": "Possuem complexidade de tempo e espaço baixas, geralmente polinomiais."
  }
]
```