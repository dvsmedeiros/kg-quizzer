```json
[
  {
    "pergunta": "A que área da computação a teoria da complexidade computacional é essencial?",
    "resposta": "Ciência da Computação"
  },
  {
    "pergunta": "Qual é o objetivo principal da teoria da complexidade computacional?",
    "resposta": "Classificar algoritmos com base em recursos necessários, como tempo e espaço."
  },
  {
    "pergunta": "Quais são os dois principais modelos de computação considerados na teoria da complexidade computacional?",
    "resposta": "Máquina de Turing e modelo de circuitos"
  },
  {
    "pergunta": "Qual classe de problemas é conhecida por ter soluções que podem ser verificadas em tempo polinomial?",
    "resposta": "NP (Non-deterministic Polynomial time)"
  },
  {
    "pergunta": "Qual é a distinção entre as classes P e NP na teoria da complexidade computacional?",
    "resposta": "Problemas de classe P têm soluções que podem ser encontradas em tempo polinomial, enquanto problemas de classe NP têm suas soluções verificáveis em tempo polinomial."
  },
  {
    "pergunta": "Qual é o problema central na teoria da complexidade computacional relacionado às classes P e NP?",
    "resposta": "Problema P vs NP"
  },
  {
    "pergunta": "Quais são alguns dos problemas conhecidos como NP-completos?",
    "resposta": "Problemas de satisfatibilidade booleana, problema do caixeiro viajante."
  },
  {
    "pergunta": "Qual abordagem é comumente usada para aproximar soluções para problemas NP-difíceis?",
    "resposta": "Abordagens de heurísticas e algoritmos aproximados"
  },
  {
    "pergunta": "O que a teoria da complexidade computacional ajuda a entender sobre o desempenho dos algoritmos?",
    "resposta": "A influência do tamanho da entrada nos recursos necessários (tempo e espaço)."
  },
  {
    "pergunta": "Quais são alguns campos além da ciência da computação onde a teoria da complexidade computacional é aplicada?",
    "resposta": "Cibernética, ciências físicas, economia, genética."
  }
]
```