pergunta;resposta
O que é a teoria da complexidade computacional?;Estuda os recursos computacionais necessários para resolver problemas.
Qual é o objetivo principal da teoria da complexidade computacional?;Medir e analisar os recursos como tempo e espaço utilizados por algoritmos.
O que é a complexidade de tempo em um algoritmo?;Número de passos ou operações necessárias para executar o algoritmo.
Como é medida a complexidade de espaço de um algoritmo?;Em função da quantidade de memória ou armazenamento necessário.
Qual classe de复杂idade define problemas que podem ser resolvidos em tempo polinomial?;Classe P (Polynomial time).
O que caracteriza os problemas na classe NP (Nondeterministic Polynomial)?;Problemas para os quais as soluções podem ser verificadas em tempo polinomial.
Qual é a diferença entre P e NP?;P problemas são resolvidos rapidamente, enquanto NP problemas são verificados rapidamente.
Dê um exemplo de problema na classe P.;Algoritmos de triagem como o Merge Sort.
Qual é um exemplo clássico de problema na classe NP?;Problema do Vendedor de Viagens (Traveling Salesman Problem).
Por que a diferença entre P e NP é importante?;Se P ≠ NP, problemas complexos não podem ser resolvidos rapidamente.
