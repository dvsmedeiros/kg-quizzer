<think>
Okay, I need to generate 10 question-answer pairs in Portuguese based on the given context about computational complexity theory. Let me start by reading the context carefully to understand the key points.

The context mentions that computational complexity theory classifies problems based on resource usage, relates classes, and discusses concepts like P vs NP, resource measures (time, storage, communication, etc.), and distinguishes between computational complexity and computability theory. Also, it talks about the Millennium Prize Problem and the difference between analysis of algorithms and computational complexity.

First, I'll list out the main topics and terms from the context. These include:
- Classification of computational problems by resource usage
- Resource measures (time, storage, communication, gates, processors)
- P vs NP problem
- Millennium Prize Problems
- Difference between computational complexity and computability theory
- Analysis of algorithms vs computational complexity
- Practical limits of computers
- Algorithms and solvability
- Computability theory's focus on what can be solved algorithmically

Now, I need to form questions that target these points. Each question should be specific enough to have a clear answer from the context. Let's start with the P vs NP problem since that's a major point. The answer would be that it's one of the Millennium Prize Problems.

Next, the main focus of computational complexity theory: classifying problems by resource usage and relating classes. Then, the resource measures mentioned: time, storage, communication, number of gates, number of processors.

For the difference between computational complexity and computability theory, the answer would be that computational complexity restricts resources, while computability theory asks what can be solved algorithmically.

The Millennium Prize Problem related to computational complexity is the P vs NP problem. The key distinction between analysis of algorithms and computational complexity is that the former analyzes specific algorithms, while the latter asks about all possible algorithms.

Computational complexity theory's role is to determine practical limits of what computers can do. The main measure of complexity discussed is time and storage. The theory relates classes of computational problems based on resource usage.

I need to ensure each answer is concise (under 10 words) and in Portuguese. Also, check that the questions are not overlapping and cover different aspects of the context. Let me count to make sure there are 10 pairs. I think that's covered. Now, format them in CSV with semicolons as separators.
</think>

pergunta;resposta
Qual é o objetivo principal da teoria da complexidade computacional?;Classificar problemas com base no uso de recursos e relacionar classes.
Quais são exemplos de medidas de complexidade mencionadas no texto?;Tempo, armazenamento, comunicação, número de portas, número de processadores.
Qual problema é considerado um dos sete Problemas do Milênio?;O problema P versus NP.
Como a teoria da complexidade computacional difere da teoria da computabilidade?;A teoria da complexidade restringe recursos, enquanto a computabilidade pergunta o que pode ser resolvido algoritmicamente.
O que determina a teoria da complexidade computacional sobre limites práticos?;O que computadores podem ou não fazer.
Qual a diferença entre análise de algoritmos e teoria da complexidade computacional?;A análise de algoritmos estuda um algoritmo específico; a complexidade computacional pergunta sobre todos os algoritmos possíveis.
Qual é a principal distinção entre problemas classificados como complexos?;Problemas que exigem recursos significativos para serem resolvidos.
O que define um problema como "inherentemente difícil"?;Quando sua solução requer recursos significativos, independentemente do algoritmo.
A teoria da complexidade computacional estuda problemas solúveis por meio de algoritmos?;Sim, classifica problemas com base em recursos.
Qual a relação entre teoria da complexidade e teoria da computabilidade?;A complexidade restringe recursos; a computabilidade pergunta sobre solvabilidade algorítmica.