pergunta;resposta
O que estuda a teoria da complexidade computacional?;A eficiência de algoritmos em relação aos recursos computacionais utilizados.
Qual o principal objetivo da análise de complexidade de algoritmos?;Determinar como o tempo de execução ou o uso de memória de um algoritmo cresce com o tamanho da entrada.
O que é a notação Big O?;Uma notação matemática utilizada para descrever o limite superior do crescimento de uma função, geralmente usada para expressar a complexidade de um algoritmo.
Qual a complexidade de um algoritmo de busca linear em um array não ordenado?;O(n)
Qual a complexidade de um algoritmo de busca binária em um array ordenado?;O(log n)
O que significa um algoritmo com complexidade O(1)?;O tempo de execução do algoritmo é constante, independentemente do tamanho da entrada.
Qual a complexidade de um algoritmo que percorre todos os pares de elementos em um array de tamanho n?;O(n²)
O que é um problema NP-completo?;Um problema para o qual não se conhece um algoritmo eficiente (polinomial) para resolvê-lo, e para o qual qualquer outro problema em NP pode ser reduzido em tempo polinomial.
Qual a diferença entre complexidade de tempo e complexidade de espaço?;Complexidade de tempo mede o tempo de execução, enquanto complexidade de espaço mede a quantidade de memória utilizada.
O que significa "redução" no contexto de problemas NP-completos?;Transformar um problema em outro, mantendo a mesma dificuldade, para provar que ambos são NP-completos.