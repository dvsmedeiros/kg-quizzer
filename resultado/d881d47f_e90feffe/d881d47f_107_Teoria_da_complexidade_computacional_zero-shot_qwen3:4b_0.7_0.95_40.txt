<think>
Okay, the user wants me to generate 10 objective questions and answers in CSV format based on the given context, which is "Teoria_da_complexidade_computacional". Let me start by understanding the context. 

First, I need to recall what computational complexity theory covers. It's about classifying computational problems based on their difficulty and the resources (time, space) needed to solve them. Key concepts include complexity classes like P, NP, PSPACE, EXP, and important problems like P vs NP, NP-complete, and the halting problem.

Now, I need to create 10 distinct questions. Let me brainstorm possible topics. Maybe start with definitions of complexity classes, then move to problems, famous conjectures, and some fundamental concepts. I should ensure each question is unique and covers different aspects.

1. What are the two main types of complexity classes in computational complexity theory? (P and NP)
2. Which problem is considered the most famous in complexity theory? (P vs NP)
3. What is the class P in computational complexity? (problems solvable in polynomial time)
4. Which class includes all problems that can be solved by a deterministic Turing machine in polynomial time? (P)
5. What is the significance of the halting problem in complexity theory? (it's undecidable and in the complexity class EXP)
6. What is an NP-complete problem? (a problem in NP that is as hard as any other problem in NP)
7. What is the difference between P and NP? (P is solvable in polynomial time, NP is verifiable in polynomial time)
8. Which problem is known to be in PSPACE but not in P? (some problems like the Hamiltonian path problem)
9. What is the class EXP in computational complexity? (problems solvable in exponential time)
10. What is the role of the polynomial time hierarchy? (it's a generalization of P and NP)

Wait, I need to check if these are all correct and not repeating. Also, make sure the answers are accurate. For example, the halting problem is in EXP, but I should confirm that. Also, the Hamiltonian path problem is in PSPACE but not necessarily P. The polynomial time hierarchy is a generalization beyond P and NP. 

I think these are all valid. Now, structure them into CSV format with the correct separator. Make sure each line is a pair, and no extra text. Let me check the count: 10 questions. Each answer is a single line. Alright, that should meet the user's requirements.
</think>

pergunta;resposta
Qual é a principal classe de complexidade que inclui todos os problemas que podem ser resolvidos em tempo polinomial por uma máquina de Turing determinística?;P
Qual é o problema mais famoso da teoria da complexidade computacional?;P vs NP
Qual é a definição de um problema NP-completo?;Um problema em NP que é pelo menos tão difícil quanto qualquer outro problema em NP
Qual é a classe de complexidade que descreve problemas que podem ser verificados em tempo polinomial, mas não necessariamente resolvidos em tempo polinomial?;NP
Qual é o problema de decisão que é considerado indecidível e está na classe EXP?;Problema da parada (Halting Problem)
Qual é a classe de complexidade que engloba todos os problemas que podem ser resolvidos em tempo exponencial por uma máquina de Turing determinística?;EXP
Qual é a relação entre as classes P e NP?;P é um subconjunto de NP, mas não é conhecido se P = NP ou P ≠ NP
Qual é a classe de complexidade que inclui problemas que podem ser resolvidos com espaço polinomial, mas não necessariamente em tempo polinomial?;PSPACE
Qual é a hierarquia de complexidade que generaliza as classes P e NP?;Hierarquia de tempo polinomial
Qual é o problema que é NP-difícil, mas não está em NP?;Problemas NP-difíceis que não estão em NP, como alguns problemas em PSPACE