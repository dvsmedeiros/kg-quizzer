<think>
Okay, I need to generate 10 question-answer pairs based on the provided context and facts. Let me start by carefully reading the context and the facts given.

The context explains that computational complexity theory is a branch of theoretical computer science and mathematics that classifies computational problems based on resource usage and explores relationships between these classifications. A computational problem is a task solved by a computer using mechanical steps, like an algorithm.

Looking at the facts, there's a lot of information about various people (like Christos Papadimitriou, David Shmoys, etc.) and their academic disciplines or fields related to computational complexity theory. Also, there's information about the ontology and categories that computational complexity theory belongs to, such as being a subclass of algorithms, data structures, etc. Additionally, there are references to Wikipedia and other resources.

Now, I need to create 10 diverse questions that cover different aspects of this information. Let me list out possible topics:

1. The main focus of computational complexity theory.
2. What defines a computational problem.
3. Key figures in the field (from the facts).
4. Resources used for classification (time, space).
5. Categories or classifications in the theory.
6. Relationships between different complexity classes.
7. The role of algorithms in this theory.
8. Sub-disciplines or related fields (like algorithms analysis, computability theory).
9. Ontological classifications (like Yago categories).
10. Templates or resources used in Wikipedia entries.

Let me check the examples provided. They covered classification attributes, problem definitions, resources (time and space), roles of the theory, related fields, etc. I need to avoid repeating similar questions.

Now, structuring each question and answer:

1. **Question:** Qual é o principal objetivo da teoria da complexidade computacional?  
   **Answer:** Classificar problemas computacionais com base no uso de recursos e explorar relações entre essas classificações.

2. **Question:** O que define um problema computacional segundo o contexto?  
   **Answer:** Uma tarefa resolvida por um computador através da aplicação mecânica de etapas matemáticas, como um algoritmo.

3. **Question:** Quais são exemplos de figuras associadas à teoria da complexidade computacional?  
   **Answer:** Christos Papadimitriou, David Shmoys, Georg Gottlob, Irit Dinur, entre outros.

4. **Question:** Quais são os principais recursos utilizados para medir a complexidade de problemas?  
   **Answer:** Tempo e armazenamento.

5. **Question:** Qual é a relação entre a teoria da complexidade computacional e a análise de algoritmos?  
   **Answer:** A análise de algoritmos examina os requisitos de recursos de um algoritmo específico, enquanto a teoria da complexidade classifica problemas com base em dificuldade inerente.

6. **Question:** Que categorias da ontologia Yago incluem a teoria da complexidade computacional?  
   **Answer:** Algoritmo, Estrutura de dados, Regra, entre outras.

7. **Question:** Qual é o propósito da teoria da complexidade computacional em termos práticos?  
   **Answer:** Determinar os limites práticos sobre o que os computadores podem ou não fazer.

8. **Question:** Quais campos da ciência da computação estão diretamente relacionados à teoria da complexidade computacional?  
   **Answer:** Análise de algoritmos e teoria da computabilidade.

9. **Question:** Que tipo de problemas são classificados pela teoria da complexidade computacional?  
   **Answer:** Problemas computacionais, que podem ser resolvidos por algoritmos.

10. **Question:** Quais são os recursos utilizados para classificar problemas segundo a teoria da complexidade computacional?  
   **Answer:** Uso de recursos como tempo e armazenamento.

Wait, I need to ensure that the answers are unique and based on the context and facts. Let me check if some answers repeat or are not directly supported. For example, the answer to question 4 and 10 are similar, but maybe the phrasing can be adjusted. Also, the answer to question 1 should be directly from the context. The facts mention people's fields, so the third question is valid. The Yago categories are listed in the facts. The practical purpose is mentioned in the examples. Okay, this seems to cover different aspects without repetition.
</think>

pergunta;resposta  
Qual é o principal objetivo da teoria da complexidade computacional?;Classificar problemas computacionais com base no uso de recursos e explorar relações entre essas classificações.  
O que define um problema computacional segundo o contexto?;Uma tarefa resolvida por um computador através da aplicação mecânica de etapas matemáticas, como um algoritmo.  
Quais são exemplos de figuras associadas à teoria da complexidade computacional?;Christos Papadimitriou, David Shmoys, Georg Gottlob, Irit Dinur, entre outros.  
Quais são os principais recursos utilizados para medir a complexidade de problemas?;Tempo e armazenamento.  
Qual é a relação entre a teoria da complexidade computacional e a análise de algoritmos?;A análise de algoritmos examina os requisitos de recursos de um algoritmo específico, enquanto a teoria da complexidade classifica problemas com base em dificuldade inerente.  
Que categorias da ontologia Yago incluem a teoria da complexidade computacional?;Algoritmo, Estrutura de dados, Regra, entre outras.  
Qual é o propósito da teoria da complexidade computacional em termos práticos?;Determinar os limites práticos sobre o que os computadores podem ou não fazer.  
Quais campos da ciência da computação estão diretamente relacionados à teoria da complexidade computacional?;Análise de algoritmos e teoria da computabilidade.  
Que tipo de problemas são classificados pela teoria da complexidade computacional?;Problemas computacionais, que podem ser resolvidos por algoritmos.  
Quais são os recursos utilizados para classificar problemas segundo a teoria da complexidade computacional?;Uso de recursos como tempo e armazenamento.