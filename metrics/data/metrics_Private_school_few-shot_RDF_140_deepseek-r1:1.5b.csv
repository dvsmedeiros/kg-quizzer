Question,Answer,Q_brunet,Q_ttr,Q_yngve,Q_simple_word_ratio,A_brunet,A_ttr,A_yngve,A_simple_word_ratio
2. **Parse Each Row**: For each row, extract the school names and their types.,2.02273,5.54696,0.6,0.000,3.5,4.10211,1.0,0.000
3. **Apply the Same Rules**: Use the same criteria as in the example, which includes checking if a school is public or private based on whether its type matches Public or Private.,2.16176,6.4664,0.6875,0.000,3.9,6.44608,0.84211,0.000
4. **Handle Exceptions**: If a row doesn't have an expected number of entries (like 2 for each entry after the first), I should consider it an error and skip adding anything to that line.,2.09483,6.81246,0.92,0.200,6.5,5.36491,1.0,0.000
df.columns = ['school_name', 'type']  # Remover o novo header,1.25,1.85566,1.0,0.000,1.44444,4.10211,1.0,0.200
for index, row in df.iterrows():,0.5,1.85566,1.0,0.000,2.5,2.50045,1.0,0.000
    if tipo not in ('public', 'private'):,1.75,3.43523,1.0,0.200,2.0,1.0,1.0,0.000
    resultado.append(f{school}, {tipo}).strip(),2.25,2.50045,1.0,0.333,2.5,2.50045,1.0,0.333
print(\nResultado:, \n.join(resulto)),1.25,1.85566,1.0,0.000,2.5,1.85566,1.0,0.000
Agora, vamos ver como est√° funcionando:,0.0,1.0,1.0,0.000,1.66667,3.43523,1.0,0.250
